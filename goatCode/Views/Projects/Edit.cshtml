@model goatCode.Models.ViewModels.FileEditViewModel
@using goatCode.Services
@{
    ViewBag.Title = "Edit";
}


<pre id="editor">@Model.content</pre>
<div id="Editor">
@section scripts
{
    <script src="~/Scripts/ace/ace.js" type="text/javascript" charset="utf-8"></script>
    <script src="~/Scripts/jquery.signalR-2.2.2.js"></script>
    <script src="~/signalr/hubs"></script>
    <script src="~/Scripts/ace/ext-language_tools.js"></script>
    <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
    <script src="~/signalr/hubs"></script>
    <script>
        var DocumentID = @ViewBag.DocumentID;

        ace.require("ace/ext/language_tools");
        var editor = ace.edit("editor");
        editor.setTheme("ace/theme/twilight");
        editor.session.setMode("@("ace/mode/" + Model.extensionSetting())");
        editor.setOptions({
            enableBasicAutocompletion: true,
            enableSnippets: true,
            enableLiveAutocompletion: true
        });
        editor.setPrintMarginColumn(false);
        $("form").submit(function () {
        $("#hidden_editor").val(editor.getSession().getValue());
        });

        var codeHub = $.connection.codeHub;
        var silent = false;
        codeHub.client.onChange = function (changeData) {
            console.log(changeData);
            silent = true;
            editor.getSession().getDocument().applyDelta(changeData);
            silent = false;
        };

        $.connection.hub.start().done(function () {
            codeHub.server.joinDocument(DocumentID);
            editor.on("change", function (obj) {
                if (silent) {
                    return;
                }
                console.log(obj);
                codeHub.server.onChange(obj, DocumentID);
            });
        });
         /*jQuery(function savee() {
                setTimeout(function () {
                jQuery('#saveCode').click();
                }, 10000)
          });*/
        //TODO: gera ajax drasl svo þetta sé ekki alltaf að refresha bitch.

    
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page.
                $('#discussion').append('<li><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };
            // Get the user name and store it to prepend to messages.
            $('#displayname').val(prompt('Enter your name:', ''));
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.send($('#displayname').val(), $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
 }
</div>

<div class="container">
    <input type="text" id="message" />
    <input type="button" id="sendmessage" value="Send" />
    <input type="hidden" id="displayname" />
    <ul id="discussion"></ul>
</div>

<table class="table">
    <tr>
        <td>
            <div style="float:left;width:50%;">@Html.ActionLink("Back to list of files", "Index", new { projectId = Model.projectId })</div>
        </td>
        <td>
            <div style="float:right;">@using (Html.BeginForm("SaveCode", "Projects", FormMethod.Post))
            {
                @Html.HiddenFor(m => m.content, new { @id = "hidden_editor" })
                @Html.HiddenFor(x => x.ID, new { @id = "hidden_editor" })
                @Html.HiddenFor(t => t.extension, new { @id = "hidden_editor" })
                @Html.HiddenFor(c => c.name, new { @id = "hidden_editor" })
                <input type="submit" value="Save code" />
            }
            </div>
        </td>
    </tr>
</table>